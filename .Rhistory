install.packages("KernSmooth")
library(KernSmooth)
?solve
library(datasets)
data(iris)
?iris
head(iris)
s <- split(iris, iris$Species)
s
colMeans(s)
lapply(s, colMeans(s))
traceback()
?subset
s <- subset(iris, isis$Species = "virginica")
s <- subset(iris, isis$Species == "virginica")
s <- subset(iris, iris$Species == "virginica")
x <- mean(s[, iris$Sepal.Length])
s
x <- mean(s[, s$Sepal.Length])
x <- mean(s[, 1])
colMeans(iris)
apply(iris[, 1:4], 1, mean)
apply(iris, 2, mean)
apply(iris[, 1:4], 2, mean)
apply(iris, 2, mean, drop = TRUE)
data(mtcars)
?mtcars
mean(mtcars$mpg, mtcars$cyl)
with(mtcars, tapply(mpg, cyl, mean))
?with
?tapply
View(mtcars)
with(mtcars, tapply(mpg, gear, mean))
with(mtcars, tapply(hp, cyl, mean))
209.21429-82.63636
x <- matrix(1:9, 3, 3)
x
x.inv <- solve(x)
?randvar
x <- matrix(c(1, 3, 5, 2, 6, 7, 2, 9, 3), 3, 3)
x.inv <- solve(x)
x.inv
x %*% x.inv
round(x %*% x.inv, 2)
source(makeVector.R)
setwd("~/datasciencecoursera")
source("makeVector.R")
source("cachemean.R")
test <- c(1, 2, 3, 4, 5)
makeVector(test)
cachemean(test)
cachemean("test")
debug(cachemean)
cachemean(test)
?debug
?undebug
undebug(cachemean)
test <- makeVector(c(2, 3, 4))
test
test2 <- cachemean(c(2,3,4))
test2 <- cachemean(test)
n
